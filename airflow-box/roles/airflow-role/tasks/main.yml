---
- name: System | Update and upgrade apt packages
  become: true
  apt:
    upgrade: yes
    update_cache: yes
    cache_valid_time: 86400

# install packages
# airflow group
# airflow user
# airflow home

- name: Airflow | Ensure Airflow group
  group:
    name: "{{ airflow_group }}"
  become: true

- name: Airflow | Ensure Airflow user
  user:
    name: "{{ airflow_user }}"
    group: "{{ airflow_group }}"
    shell: /bin/bash
  become: true

- name: Airflow | Create path for Airflow home
  file:
    path: "{{ airflow_home }}"
    state: directory
    owner: "{{ airflow_user }}"
    group: "{{ airflow_group }}"
  become: true

- name: Airflow | Create path for configuration files
  file:
    path: "{{ airflow_environment_file_folder }}"
    state: directory
    owner: "{{ airflow_user }}"
    group: "{{ airflow_group }}"
  become: true

- name: Airflow | Create path for PID files
  file:
    path: "{{ airflow_pidfile_folder }}"
    state: directory
    owner: "{{ airflow_user }}"
    group: "{{ airflow_group }}"
  become: true

- name: Airflow | Installing dependencies
  apt:
    pkg: "{{ item }}"
    state: present
    update_cache: yes
  with_items: "{{ airflow_required_libs }}"
  become: true

- name: Airflow | Set AIRFLOW_HOME environment variable in /etc/environment
  lineinfile:
    path: /etc/environment
    line: 'AIRFLOW_HOME={{ airflow_home }}'
  become: true

- name: Airflow | Installing Airflow
  pip:
    executable: "{{ airflow_pip_executable }}"
    name: apache-airflow
    version: "{{ airflow_version }}"
    extra_args: --no-cache-dir
  register: airflow_install

- name: Airflow | Installing Airflow Extra Packages
  pip:
    executable: "{{ airflow_pip_executable }}"
    name: apache-airflow[{{ item }}]
    version: "{{ airflow_version }}"
  with_items: "{{ airflow_extra_packages }}"
  when: airflow_extra_packages

- name: Airflow | Initializing DB
  command: "airflow initdb"
  environment:
    AIRFLOW_HOME: "{{ airflow_home }}"
  become: true
  become_user: "{{ airflow_user }}"

#- name: Airflow | Installing proper Celery version
#  pip:
#    executable: "{{ airflow_pip_executable }}"
#    name: celery
#    version: "{{ celery_version }}"
#  when: airflow_executor == "CeleryExecutor"

#- name: Airflow | Installing extra Celery packages
#  pip:
#    executable: "{{ airflow_pip_executable }}"
#    name: celery[{{ item }}]
#    version: "{{ celery_version }}"
#  with_items: "{{ celery_extra_packages }}"
#  when: airflow_executor == "CeleryExecutor" and celery_extra_packages
#
#- name: Airflow | Installing DAGs dependencies
#  pip:
#    executable: "{{ airflow_pip_executable }}"
#    name: "{{ item.name }}"
#    version: "{{ item.version }}"
#  with_items: "{{ dags_dependencies }}"
#  when: dags_dependencies
#  notify:
#    - restart airflow-webserver
#    - restart airflow-scheduler
#    - restart airflow-worker
#    - restart airflow-flower
#
#- name: Airflow | Copy Environment File
#  template:
#    src: airflow-environment-file.j2
#    dest: "{{ airflow_environment_file_folder }}/airflow"
#    mode: 0644
#    owner: "{{ airflow_user }}"
#    group: "{{ airflow_group }}"
#
#- name: Airflow | Copy Daemon scripts
#  template:
#    src: "{{ item.key }}.service.j2"
#    dest: /lib/systemd/system/{{ item.key }}.service
#    mode: 0644
#  notify: restart {{ item.key }}
#  with_dict: "{{ airflow_services }}"
#  when: "{{ item.value.enabled }}"
